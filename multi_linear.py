# -*- coding: utf-8 -*-
"""multi-linear.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ex8fpFEzsKc0IKyTgdsdWxC-bQvqPiZQ
"""

import pandas as pd

data=pd.read_excel("/content/Date-Wise-Prices-all-Commodity.xlsx")
data.head()

use_column=["Min_x0020_Price",	"Max_x0020_Price",	"Modal_x0020_Price"]
data=data[use_column].dropna()

data.head()

from sklearn.model_selection import train_test_split
# To select multiple columns, use a list of column names
x =data[['Min_x0020_Price','Max_x0020_Price']]
y =data['Modal_x0020_Price']
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.33, random_state=42)

print(x_train)

from sklearn.linear_model import LinearRegression

# Create an instance of the LinearRegression model
model = LinearRegression()

# Now call the fit method on the instance
model.fit(x_train, y_train)

y_pred=model.predict(x_test)

from sklearn.metrics import mean_squared_error, r2_score

# Calculate the mean squared error and R-squared
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

# Print the calculated metrics
print(f"Mean Squared Error: {mse}")
print(f"R-squared: {r2}")

from matplotlib import pyplot as plt
plt.figure(figsize=(10,6))
plt.scatter(y_test,y_pred)
plt.xlabel("Actuel modal price ")
plt.ylabel("predicted modal price")
plt.title("Actual vs predicted modal price")
plt.plot([min(y_test),max(y_test)],[min(y_test),max(y_test)],color="red")
plt.grid(True)
plt.show()
plt.title("Actual vs predicted modal price")
plt.plot([min(y_test),max(y_test)],[min(y_test),max(y_test)],color="red")
plt.grid(True)
plt.show()